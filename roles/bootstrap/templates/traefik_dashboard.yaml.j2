---
apiVersion: v1
kind: Service
metadata:
  name: traefik-dashboard
  labels:
    app.kubernetes.io/instance: traefik
    app.kubernetes.io/name: traefik-dashboard
spec:
  type: ClusterIP
  ports:
    - name: traefik
      port: 9000
      targetPort: traefik
      protocol: TCP
  selector:
    app.kubernetes.io/instance: traefik-kube-system
    app.kubernetes.io/name: traefik
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: traefik-dashboard
  annotations:
    cert-manager.io/cluster-issuer: default-cluster-issuer
    traefik.ingress.kubernetes.io/router.middlewares: "kube-system-traefik-dashboard-strip-prefix@kubernetescrd{% if traefik_auth_enabled %},oauth2-proxy-traefik-auth@kubernetescrd{% endif %}"
    ingress.kubernetes.io/force-ssl-redirect: "true"
    ingress.kubernetes.io/ssl-redirect: "true"
spec:
  ingressClassName: "traefik"
  rules:
    - host: "{{ ingress_hostname }}"
      http:
        paths:
          - path: /traefik
            pathType: Prefix
            backend:
              service:
                name: traefik-dashboard
                port:
                  number: 9000
  tls:
    - secretName: "{{ ingress_hostname }}-tls"
      hosts:
        - "{{ ingress_hostname }}"
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: traefik-dashboard-strip-prefix
spec:
  stripPrefix:
    prefixes:
    - /traefik
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: traefik-dashboard
spec:
  entryPoints:
  - websecure
  routes:
  - kind: Rule
    match: "Host(`{{ ingress_hostname }}`) && HeadersRegexp(`Referer`, `.*/traefik/.*`)"
    middlewares:
      - name: traefik-dashboard-strip-prefix
    services:
    - kind: TraefikService
      name: api@internal