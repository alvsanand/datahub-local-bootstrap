---
ingress_hostname: ""

auth_enabled: false
auth_provider: "github"
auth_client_id:
auth_client_secret:
auth_whitelist:
auth_cookie_expiration: "168h"
auth_oauth2_helm_version: 7.1.0
auth_oauth2_debug: true
auth_oauth2_helm_values:
  fullnameOverride: oauth2-proxy
  config:
    clientID: "{{ auth_client_id }}"
    clientSecret: "{{ auth_client_secret }}"
    cookieSecret: "{{ lookup('community.general.random_string', length=16, special=False) }}"
  extraArgs:
    provider: "{{ auth_provider }}"
    whitelist-domain: "{{ ingress_hostname }}"
    cookie-domain: "{{ ingress_hostname }}"
    cookie-expire: "{{ auth_cookie_expiration }}"
    cookie-csrf-expire: "1h"
    cookie-samesite: "lax"
    cookie-secure: false
    pass-host-header: true
    pass-user-headers: true
    reverse-proxy: true
    set-xauthrequest: true
    show-debug-on-error: "{{ auth_oauth2_debug }}"
    github-org: "{{ auth_organization }}"
  ingress:
    enabled: true
    className: traefik
    path: /oauth2
    hosts:
      - "{{ ingress_hostname }}"

cert_manager_helm_version: v1.14.4
cert_manager_cluster_issuer_spec:
  selfSigned: {}
cert_manager_cluster_issuer_secret_name:
cert_manager_cluster_issuer_secret_data:

longhorn_enabled: true
longhorn_enabled_only_workers: false
longhorn_helm_version: 1.6.1
longhorn_replica_count: 2
longhorn_data_dir: /var/lib/longhorn/
longhorn_helm_values:
  defaultSettings:
    defaultDataPath: "{{ longhorn_data_dir }}"
  persistence:
    defaultClassReplicaCount: "{{ longhorn_replica_count }}"
    defaultNodeSelector:
      enable: "{{ longhorn_enabled_only_workers }}"
      selector: "WORKER_NODE"
  metrics:
    serviceMonitor:
      enabled: true
  ingress:
    enabled: true
    ingressClassName: "traefik"
    host: "{{ ingress_hostname }}"
    path: /longhorn
    pathType: Prefix
    secureBackends: false
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.middlewares: "longhorn-system-middleware@kubernetescrd,{% if auth_enabled %}oauth2-proxy-traefik-auth@kubernetescrd{% endif %}"

      gethomepage.dev/enabled: "true"
      gethomepage.dev/name: "Longhorn"
      gethomepage.dev/href: "https://{{ ingress_hostname }}/longhorn/"
      gethomepage.dev/pod-selector: "app=longhorn-ui"
      gethomepage.dev/description: "Cloud-Native distributed storage built on and for Kubernetes"
      gethomepage.dev/group: "System"
      gethomepage.dev/icon: "longhorn.png"

sealed_secrets_enabled: true
sealed_secrets_helm_version: 2.15.0
sealed_secrets_key: ~/.sealed_secrets/sealed-secrets-key.json
sealed_secrets_restore: "false"

argocd_enabled: true
argocd_helm_version: 6.10.2
argocd_namespaces:
  - default
argocd_helm_values:
  configs:
    params:
      server.insecure: true
      application.namespaces: "{{ argocd_namespaces | join(', ') }}"
      server.disable.auth: true
    cmp:
      create: true
      plugins:
        helmfile:
          allowConcurrency: true
          discover:
            fileName: "helmfile.yaml*"
          generate:
            command:
              - bash
              - "-c"
              - |
                PARAMS=()

                if [[ -v ARGOCD_APP_NAMESPACE ]]; then
                  PARAMS+=(-n $ARGOCD_APP_NAMESPACE)
                fi

                if [[ -v ENV_NAME ]]; then
                  PARAMS+=(-e $ENV_NAME)
                elif [[ -v ARGOCD_ENV_ENV_NAME ]]; then
                  PARAMS+=(-e $ARGOCD_ENV_ENV_NAME)
                fi

                PARAMS+=(template --include-crds -q)

                helmfile "${PARAMS[@]}"
          lockRepo: false
  applicationSet:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
  dex:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
  repoServer:
    clusterRoleRules:
      enabled: true
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
    extraContainers:
      - name: helmfile
        image: ghcr.io/helmfile/helmfile:v0.163.1
        command: ["/var/run/argocd/argocd-cmp-server"]
        env:
          - name: HELM_CACHE_HOME
            value: /tmp/helm/cache
          - name: HELM_CONFIG_HOME
            value: /tmp/helm/config
          - name: HELMFILE_CACHE_HOME
            value: /tmp/helmfile/cache
          - name: HELMFILE_TEMPDIR
            value: /tmp/helmfile/tmp
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
        volumeMounts:
          - mountPath: /var/run/argocd
            name: var-files
          - mountPath: /home/argocd/cmp-server/plugins
            name: plugins
          - mountPath: /home/argocd/cmp-server/config/plugin.yaml
            subPath: helmfile.yaml
            name: argocd-cmp-cm
          - mountPath: /tmp
            name: helmfile-tmp
    volumes:
      - name: argocd-cmp-cm
        configMap:
          name: argocd-cmp-cm
      - name: helmfile-tmp
        emptyDir: {}
  server:
    extraArgs:
      - --basehref
      - /argo-cd
      - --rootpath
      - /argo-cd
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
    ingress:
      enabled: true
      ingressClassName: "traefik"
      hostname: "{{ ingress_hostname }}"
      path: /argo-cd
      annotations:
        ingress.kubernetes.io/force-ssl-redirect: "true"
        ingress.kubernetes.io/ssl-redirect: "true"
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.middlewares: "{% if auth_enabled %}oauth2-proxy-traefik-auth@kubernetescrd{% endif %}"

        gethomepage.dev/enabled: "true"
        gethomepage.dev/name: "Argo CD"
        gethomepage.dev/href: "https://{{ ingress_hostname }}/argo-cd"
        gethomepage.dev/pod-selector: "app.kubernetes.io/name=argocd-server"
        gethomepage.dev/description: "Declarative Continuous Deployment for Kubernetes"
        gethomepage.dev/group: "Automation"
        gethomepage.dev/icon: "argocd.png"
  controller:
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true

k3s_helm_config:
  - name: traefik
    namespace: kube-system
    values_content: |
      # custom values from https://github.com/traefik/traefik-helm-chart/blob/master/traefik/values.yaml
      globalArguments:
      - --providers.kubernetescrd.allowexternalnameservices=true
      - --providers.kubernetescrd.allowCrossNamespace=true
      - --api.insecure=true
      - --log.level=info
      metrics:
        prometheus:
          service:
            enabled: true
          serviceMonitor:
            interval: 30s
