---
ingress_hostname: ""

traefik_auth_enabled: false
traefik_auth_oauth_version: 7.1.0
traefik_auth_provider:
traefik_auth_client_id:
traefik_auth_client_secret:
traefik_auth_whitelist:
traefik_auth_oauth2_helm_values:
  fullnameOverride: oauth2-proxy
  config:
    clientID: "{{ traefik_auth_client_id}}"
    clientSecret: "{{ traefik_auth_client_secret}}"
    cookieSecret: "{{ lookup('community.general.random_string', length=16, special=False)| b64encode  }}"
  extraArgs:
    whitelist-domain: "{{ ingress_hostname }}"
    cookie-domain: "{{ ingress_hostname }}"
    provider: "{{ traefik_auth_provider}}"
    reverse-proxy: true
    set-xauthrequest: true

  authenticatedEmailsFile:
    enabled: true
    restricted_access: "{{ traefik_auth_whitelist | split(',') | join('\n') }}"

  ingress:
    enabled: true
    className: traefik

    path: /oauth2
    hosts:
      - "{{ ingress_hostname }}"

cert_manager_version: v1.14.4
cert_manager_cluster_issuer_spec:
  selfSigned: {}
cert_manager_cluster_issuer_secret_name:
cert_manager_cluster_issuer_secret_data:

longhorn_enabled: true
longhorn_version: 1.6.0
longhorn_replica_count: 2
longhorn_helm_values:
  persistence:
    defaultClassReplicaCount: "{{ longhorn_replica_count }}"
  defaultSettings:
    createDefaultDiskLabeledNodes: "true"
  ingress:
    enabled: true

    ingressClassName: "traefik"

    host: "{{ ingress_hostname }}"
    path: /longhorn

    secureBackends: true

    annotations:
      cert-manager.io/cluster-issuer: default-cluster-issuer
      traefik.ingress.kubernetes.io/router.middlewares: "longhorn-system-middleware@kubernetescrd,{% if traefik_auth_enabled %}oauth2-proxy-traefik-auth@kubernetescrd{% endif %}"

sealed_secrets_enabled: true
sealed_secrets_version: 2.15.0
sealed_secrets_key: ~/.sealed_secrets/sealed-secrets-key.json
sealed_secrets_restore: "false"

argocd_enabled: true
argocd_version: 6.6.0
argocd_server_admin_password: "admin"
argocd_namespaces:
  - default
argocd_helm_values:
  configs:
    params:
      server.insecure: true
      application.namespaces: "{{ argocd_namespaces | join(', ') }}"
    secrets: "{{ argocd_server_admin_passwords }}"
    cmp:
      create: true
      plugins:
        helmfile:
          allowConcurrency: true
          discover:
            fileName: helmfile.yaml
          generate:
            command:
              - bash
              - "-c"
              - |
                if [[ -v ENV_NAME ]]; then
                  helmfile -n "$ARGOCD_APP_NAMESPACE" -e $ENV_NAME template --include-crds -q
                elif [[ -v ARGOCD_ENV_ENV_NAME ]]; then
                  helmfile -n "$ARGOCD_APP_NAMESPACE" -e "$ARGOCD_ENV_ENV_NAME" template --include-crds -q
                else
                  helmfile -n "$ARGOCD_APP_NAMESPACE" template --include-crds -q
                fi
          lockRepo: false
  repoServer:
    extraContainers:
      - name: helmfile
        image: ghcr.io/helmfile/helmfile:v0.162.0
        command: ["/var/run/argocd/argocd-cmp-server"]
        env:
          - name: HELM_CACHE_HOME
            value: /tmp/helm/cache
          - name: HELM_CONFIG_HOME
            value: /tmp/helm/config
          - name: HELMFILE_CACHE_HOME
            value: /tmp/helmfile/cache
          - name: HELMFILE_TEMPDIR
            value: /tmp/helmfile/tmp
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
        volumeMounts:
          - mountPath: /var/run/argocd
            name: var-files
          - mountPath: /home/argocd/cmp-server/plugins
            name: plugins
          - mountPath: /home/argocd/cmp-server/config/plugin.yaml
            subPath: helmfile.yaml
            name: argocd-cmp-cm
          - mountPath: /tmp
            name: helmfile-tmp
    volumes:
      - name: argocd-cmp-cm
        configMap:
          name: argocd-cmp-cm
      - name: helmfile-tmp
        emptyDir: {}
  server:
    extraArgs:
      - --basehref
      - /argo-cd
      - --rootpath
      - /argo-cd
    ingress:
      enabled: true

      ingressClassName: "traefik"

      hostname: "{{ ingress_hostname }}"
      path: /argo-cd

      annotations:
        cert-manager.io/cluster-issuer: default-cluster-issuer
        traefik.ingress.kubernetes.io/router.middlewares: "{% if traefik_auth_enabled %}oauth2-proxy-traefik-auth@kubernetescrd{% endif %}"
