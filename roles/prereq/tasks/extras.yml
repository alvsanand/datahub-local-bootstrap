---
# Update packages
- name: Update apt repo and cache on all Debian/Ubuntu boxes
  when: ansible_os_family == 'Debian'
  apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

- name: Upgrade all packages on debian servers
  when: ansible_os_family == 'Debian'
  apt: upgrade=yes force_apt_get=yes

- name: Upgrade all packages on arch servers
  when: ansible_os_family == 'Archlinux'
  pacman: update_cache=yes upgrade=yes

- name: Upgrade all packages on redhat servers
  when: ansible_os_family == 'RedHat'
  yum: name=* state=latest

- name: Check if a reboot is needed on all servers
  register: reboot_required_file
  stat: path=/var/run/reboot-required get_md5=no

- name: Reboot the box if kernel updated
  reboot:
    msg: "Reboot initiated by Ansible for kernel updates"
    connect_timeout: 5
    reboot_timeout: 90
    pre_reboot_delay: 0
    post_reboot_delay: 30
    test_command: uptime
  when: reboot_required_file.stat.exists

# OS config
- name: "update hostnames"
  hostname:
    name: "{{ inventory_hostname }}"

- name: Add IP address of all hosts to all hosts
  become: true
  lineinfile:
    dest: /etc/hosts
    regexp: ".*{{ item }}$"
    line: "{{ hostvars[item].external_host | default(hostvars[item].host) }} {{item}}"
    state: present
  when: hostvars[item].inventory_hostname is defined
  with_items: "{{ groups.all }}"

- name: Set timezone to UTC
  become: true
  community.general.timezone:
    name: "Etc/UTC"

- name: Mount extra volumes
  become: true
  mount:
    path: "{{ item.path }}"
    src: "/dev/{{ item.id }}"
    fstype: "{{ item.fstype  | default 'ext4' }}"
    state: present
  with_items: "{{ extra_volumes }}"
