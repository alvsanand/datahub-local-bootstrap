---
k3s_cluster:
  children:
    server:
      hosts:
        k3s-server-0:
          host: 192.0.2.50
    agent:
      hosts:
        k3s-agent-1:
          host: 192.0.2.51
        k3s-agent-2:
          host: 192.0.2.52

  # Required Vars
  vars:
    ansible_port: 22
    ansible_user: debian
    k3s_version: v1.29.1+k3s2
    token: "mytoken" # Use ansible vault if you want to keep it secret
    api_endpoint: "{{ groups['server'][0]] }}"
    extra_server_args: ""
    extra_agent_args: "--node-label 'role=storage-node'" # run rook only in agent nodes
    argo_cd_namespaces: # namespaces where argo-cd will look for apps
      - default
      - some_other

    # Optional vars
    # k3s_context_name: k3s-ansible
    # api_port: 6443
    # k3s_server_location: /var/lib/rancher/k3s
    # systemd_dir: /etc/systemd/system
    # extra_service_envs: [ 'ENV_VAR1=VALUE1', 'ENV_VAR2=VALUE2' ]
    # Manifests or Airgap should be either full paths or relative to the playbook directory.
    # List of locally available manifests to apply to the cluster, useful for PVCs or Traefik modifications.
    # extra_manifests: [ '/path/to/manifest1.yaml', '/path/to/manifest2.yaml' ]
    # airgap_dir: /tmp/k3s-airgap-images
    # user_kubectl: true, by default kubectl is symlinked and configured for use by ansible_user. Set to false to only kubectl via root user.
    # server_config_yaml:  |
    #   This is now an inner yaml file. Maintain the indentation.
    #   YAML here will be placed as the content of /etc/rancher/k3s/config.yaml
    #   See https://docs.k3s.io/installation/configuration#configuration-file
    # sealed_secrets_restore: false, by default create a new sealed_secrets_key.
